#!/usr/bin/env bash

# Uncomment to download pre-built copy of ClojureScript compiler.
# Also see change needed in project.clj
# CLJS_PREBUILT_VER=1.9.330-1

# Uncomment to build our own copy of ClojureScript compiler.
# Also see change needed in project.clj
# When changing, do script/clean-all first from top-level.
CLJS_GIT_COMMIT=HEAD

# Make sure we fail and exit on the command that actually failed.
set -e
set -o pipefail

# Initialize lein if it hasn't yet been
script/lein -v > /dev/null

if [ -n "$CLJS_PREBUILT_VER" ]; then
  CLJS_JAR=../lib/cljs-${CLJS_PREBUILT_VER}.jar
  if [ ! -f $CLJS_JAR ]; then
    mkdir -p ../lib
    curl -sL http://planck-repl.org/releases/cljs/cljs-${CLJS_PREBUILT_VER}.jar > ${CLJS_JAR}
  fi
  CLJSC_CP=`script/lein with-profile build classpath`:${CLJS_JAR}
elif [ -n "$CLJS_GIT_COMMIT" ]; then
  if [ ! -e clojurescript ]; then
     git clone https://github.com/clojure/clojurescript
     pushd clojurescript
     git reset --hard $CLJS_GIT_COMMIT
     # Apply patches
     # curl -L http://dev.clojure.org/jira/secure/attachment/16348/CLJS-1874.patch | git apply
     # Deal with the case when building in sandbox mode
     if [ -e ../profiles.clj ]; then
         export MAVEN_OPTS="-Dmaven.repo.local=../sandbox-m2"
         echo "{:dev {:local-repo \"../sandbox-m2\"}}" > profiles.clj
     fi
     script/uberjar
     popd
  fi
  CLJSC_CP=`script/lein with-profile build classpath`:clojurescript/target/cljs.jar
else
  CLJSC_CP=`script/lein with-profile build classpath`
fi

mkdir -p out/cljs/analyzer
mkdir -p out/cljs/spec/impl
java -cp $CLJSC_CP clojure.main script/build.clj
